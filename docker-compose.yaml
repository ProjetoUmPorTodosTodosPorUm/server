version: '3.9'

services:
  server:
    container_name: server
    image: renangalvao/project:server-latest
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      test: curl -f localhost/health || exit 1
      interval: 1m
    volumes:
      - files_volume:/var/www/files
      - lets_encrypt:/etc/letsencrypt
    networks:
      - main_network
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=project
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      test: pg_isready -d project
      interval: 1m
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - main_network

  redis:
    image: redis:7.2-alpine
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1m
    volumes:
      - redis_volume:/data
    networks:
      - main_network

  api:
    image: renangalvao/project:api-latest
    environment:
      - ACCESS_TOKEN_JWT_SECRET=$ACCESS_TOKEN_JWT_SECRET
      - REFRESH_TOKEN_JWT_SECRET=$REFRESH_TOKEN_JWT_SECRET
      - MAIL_HOST=$MAIL_HOST
      - MAIL_PORT=$MAIL_PORT
      - MAIL_USER=$MAIL_USER
      - MAIL_PASSWORD=$MAIL_PASSWORD
      - MAIL_FROM=$MAIL_FROM
      - DATABASE_URL=$DATABASE_URL
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      # simple node
      test: wget -qO- localhost:3000/health  || exit 1
      interval: 1m
    volumes:
      - files_volume:/usr/src/app/files
    networks:
      - main_network
    depends_on:
      - db
      - redis

  web:
    image: renangalvao/project:web-latest
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      # sveltekit
      test: wget -qO- 0.0.0.0:3000/health  || exit 1
      interval: 1m
    networks:
      - main_network
    depends_on:
      - api

  cms:
    image: renangalvao/project:cms-latest
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      # sveltekit
      test: wget -qO- 0.0.0.0:3000/health  || exit 1
      interval: 1m
    networks:
      - main_network
    depends_on:
      - api

  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:13
    container_name: mailserver
    hostname: mail.projetoumportodostodosporum.org
    env_file: mailserver.env
    # More information about the mail-server ports:
    # https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/
    # To avoid conflicts with yaml base-60 float, DO NOT remove the quotation marks.
    ports:
      - "25:25"    # SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)
      - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
      - "465:465"  # ESMTP (implicit TLS)
      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
      - "993:993"  # IMAP4 (implicit TLS)
    volumes:
      - lets_encrypt:/etc/letsencrypt
      - mail_server_data:/var/mail/
      - mail_server_state:/var/mail-state/
      - mail_server_config:/tmp/docker-mailserver/
      - ./docker-data/dms/mail-logs/:/var/log/mail/
      - /etc/localtime:/etc/localtime:ro
      - ./mailer/config/dovecot/10-custom.conf:/etc/dovecot/conf.d/10-custom.conf
      - ./certs/:/certs
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    stop_grace_period: 1m
    # Uncomment if using `ENABLE_FAIL2BAN=1`:
    # cap_add:
    #   - NET_ADMIN
    healthcheck:
      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
      timeout: 3s
      retries: 0
    networks:
      - main_network
    depends_on:
      - server

networks:
  main_network:
    name: main_network
    driver: bridge

volumes:
  files_volume:
    name: files
  db_volume:
    name: db
  redis_volume:
    name: redis_volume
  lets_encrypt:
    name: lets_encrypt
  mail_server_data:
    name: mail_server_data
  mail_server_state:
    name: mail_server_state
  mail_server_config:
    name: mail_server_config