version: '3.9'

services:
  dev-server:
    container_name: server
    build:
      context: .
      target: dev-image
      args:
        - BACKEND_SERVER_URL=$BACKEND_SERVER_URL
        - WEB_SERVER_URL=$WEB_SERVER_URL
        - CMS_SERVER_URL=$CMS_SERVER_URL
        - ENABLED_MODULES=headers-more brotli
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      test: curl -f localhost/health || exit 1
      interval: 1m
    volumes:
      - files_volume:/var/www/files
    networks:
      - main_network
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp
    depends_on:
      - dev-db
      - dev-redis

  dev-db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=project
      - POSTGRES_PASSWORD=project
      - POSTGRES_DB=project
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      # any endpoint
      test: pg_isready -d project
      interval: 1m
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - main_network
    ports:
      - 5432:5432

  dev-redis:
    image: redis:7.2-alpine
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 5s
        window: 5s
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1m
    volumes:
      - redis_volume:/data
    networks:
      - main_network
    ports:
      - 6379:6379

networks:
  main_network:
    name: main_network
    driver: bridge

volumes:
  files_volume:
    name: files
  db_volume:
    name: db
  redis_volume:
    name: redis_volume
